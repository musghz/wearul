/// Try fast PWM for the 3 timers
/// Works for timer 0, not for timer 1, untested for timer 2
///
/// Fast PWM generated by counting from 0 to TOP
/// frequency = CLK/[prescaler * (1 + TOP_VALUE)]
///
/// ATmega328 PWM pins:
///
/// Timer 0, 8-bit
/// -OC0A PD6 or 6
/// -OC0B PD5 or 5
/// Timer 1, 16-bit
/// -OC1A PB1 or 9
/// -OC1B PB2 or 10
/// Timer 2, 8-bit
/// -OC2A PB3 or 11
/// -OC2B PD3 or 3
///
/// Reference:
/// https://sites.google.com/site/qeewiki/books/avr-guide/pwm-on-the-atmega328
/// Accessed 21 Aug 2017
/// https://www.arduino.cc/en/Tutorial/SecretsOfArduinoPWM
/// Accessed 21 Aug 2019
/// http://ceezblog.info/2018/07/10/arduino-timer-pwm-cheat-sheet/
/// Accessed 21 Aug 2019
///
/// Created 21 Aug 2019
/// -Without Arduino library, issues
/// Modified 21 Aug 2019
/// -Simplified to use analogWrite() 
///
/// @author Mustafa Ghazi

void setup() {

  // these use timer 1
  analogWrite(9, 128-64);
  analogWrite(10, 128+64);  
  modifyTimer1(31000);
  // these use timer 2
  analogWrite(11, 25);
  analogWrite(3, 255-25);
  modifyTimer2(31);

}

void loop() {

  analogWrite(9, 128+64);
  analogWrite(10, 128-64);
  analogWrite(11, 255-25);
  analogWrite(3, 25);
  delay(5000);
  analogWrite(9, 128-64);
  analogWrite(10, 128+64);
  analogWrite(11, 25);
  analogWrite(3, 255-25);
  delay(5000);

}

/// Warning: This will mess up timekeeping functions like delay(), millis(), micros()
void modifyTimer0(uint16_t freq) {

  
  //----- PWM frequency for D5 & D6 -----
  //Timer0 divisor = 1, 8, 64, 256, 1024
  //TCCR0B = TCCR0B & B11111000 | B00000001;    // 62.5KHz
  //TCCR0B = TCCR0B & B11111000 | B00000010;    // 7.8KHz
  //TCCR0B = TCCR0B & B11111000 | B00000011;    // 976Hz (default)
  //TCCR0B = TCCR0B & B11111000 | B00000100;    // 244Hz
  //TCCR0B = TCCR0B & B11111000 | B00000101;    // 61Hz
  
}

// @param freq PWM frequency (Hz) 31000, 3900, 490, 123, 31
void modifyTimer1(uint16_t freq){

  //----- PWM frequency for D9 & D10 -----
  //Timer1 divisor = 2, 16, 128, 512, 2048
  if (freq == 31000) {
    TCCR1B = TCCR1B & B11111000 | B00000001;    // 31KHz
  } else if (freq == 3900) {
    TCCR1B = TCCR1B & B11111000 | B00000010;    // 3.9KHz
  } else if (freq == 490) {
    TCCR1B = TCCR1B & B11111000 | B00000011;    // 490Hz (default)
  } else if (freq == 123) {
    TCCR1B = TCCR1B & B11111000 | B00000100;    // 122.5Hz
  } else if (freq == 31) {
    TCCR1B = TCCR1B & B11111000 | B00000101;    // 30.6Hz
  }
}


// @param freq PWM frequency (Hz) 31000, 3900, 980, 490, 245, 123, 31
void modifyTimer2(uint16_t freq){

  //----- PWM frequency for D3 & D11 -----
  //Timer2 divisor = 2, 16, 64, 128, 512, 2048

  if (freq == 31000) {
    TCCR2B = TCCR2B & B11111000 | B00000001;    // 31KHz
  } else if (freq == 3900) {
    TCCR2B = TCCR2B & B11111000 | B00000010;    // 3.9KHz
  }else if (freq == 980) {
    TCCR2B = TCCR2B & B11111000 | B00000011;    // 980Hz
  } else if (freq == 490) {
    TCCR2B = TCCR2B & B11111000 | B00000100;    // 490Hz (default)
  } else if (freq == 245) {
    TCCR2B = TCCR2B & B11111000 | B00000101;    // 245Hz
  } else if (freq == 123) {
    TCCR2B = TCCR2B & B11111000 | B00000110;    // 122.5Hz
  } else if (freq == 31) {
    TCCR2B = TCCR2B & B11111000 | B00000111;    // 30.6Hz
  }
}


